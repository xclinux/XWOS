#! /bin/make -f
# @file
# @brief Makefile规则 (powerpc-eabivle-gcc)
# @author
# + 隐星魂 (Roy.Sun) <www.starsoul.tech>
# @copyright
# + (c) 2015 隐星魂 (Roy.Sun) <www.starsoul.tech>
# > Licensed under the Apache License, Version 2.0 (the "License");
# > you may not use this file except in compliance with the License.
# > You may obtain a copy of the License at
# >
# >         http://www.apache.org/licenses/LICENSE-2.0
# >
# > Unless required by applicable law or agreed to in writing, software
# > distributed under the License is distributed on an "AS IS" BASIS,
# > WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# > See the License for the specific language governing permissions and
# > limitations under the License.
#

CROSS_COMPILE ?= powerpc-eabivle-
CC := $(CROSS_COMPILE)gcc
AS := $(CROSS_COMPILE)gcc -x assembler-with-cpp
CP := $(CROSS_COMPILE)objcopy
OD := $(CROSS_COMPILE)objdump
AR := $(CROSS_COMPILE)ar
MM := $(CC) -MM -MP
LD := $(CROSS_COMPILE)gcc
SIZE := $(CROSS_COMPILE)size
LUA2HEX := xwbs/util/py/lua2hex.py
XWOS_COLOR_TMPFILE := \
$(shell \
    if [ ! -f ${XWOS_TMP_DIR}/xwos.color ] ; then \
        echo 0 > ${XWOS_TMP_DIR}/xwos.color; \
    fi; \
    echo ${XWOS_TMP_DIR}/xwos.color)

ifeq ($(ARCHCFG_LITTLE_ENDIAN),y)
    ENDIAN := little
else
    ENDIAN := big
endif
**D ?= 1
WARN := -Wall -Wextra -Wundef -Wsign-conversion -Werror
INCDIRS = -I. \
          -I$(XWOS_ARCH_DIR) \
          -I$(XWOS_CPU_DIR) \
          -I$(XWOS_SOC_DIR) \
          -I$(XWOS_BRD_DIR)

PERDEF =

AFLAGS = -mvle -mcpu=e200z0 -m$(ENDIAN) -mregnames -nostdinc -nostdlib \
         -ffunction-sections -fdata-sections \
         -g3 \
         -Wa,-adhlns="$@.lst" $(WARN) $(PERDEF)

CFLAGS = -mvle -mcpu=e200z0 -m$(ENDIAN) -mregnames -std=gnu11 \
         -ffunction-sections -fdata-sections \
         -g3 -fverbose-asm \
         -Wa,-adhlns="$@.lst" $(WARN) $(PERDEF)

ifeq ($(**D),0)
    CFLAGS += -O2
else
    CFLAGS += -O0
endif

ifeq ($(ARCHCFG_COMPILER_CLIB),n)
    CFLAGS += -fno-builtin
endif

LDFLAGS = -mcpu=e200z0 -mhard-float \
          -L$(XWOS_SOC_DIR) -T$(XWOS_BRD_DIR)/$(XuanWuOS_CFG_LDSCRIPT) \
          -Wl,--gc-sections \
          -Wl,-Map=$(XWOS_BRD_DIR)/wkspc/$(TARGET).map,--cref

OBJ_DIR := $(XWOS_WKSPC_DIR)/obj/

include $(XWOS_ARCH_DIR)/arch.mk
include $(XWOS_CPU_DIR)/cpu.mk
include $(XWOS_SOC_DIR)/soc.mk
include $(XWOS_BDL_DIR)/bdl.mk
include $(XWOS_KN_DIR)/xwos.mk
include $(XWBS_UTIL_MK_XWMO)

# colorfully build
ifneq ($(**V),1)
# When multi-thread building, it may be NULL when cat $(XWOS_COLOR_TMPFILE).
    SHOW_CPP = $(strip @COLOR=$$(cat $(XWOS_COLOR_TMPFILE)); \
                       if [ x$${COLOR} = x ]; then COLOR=0; \
                       elif [ $${COLOR} -gt 7 ]; then COLOR=0; fi; \
                       echo -e "\e[1m\e[4$${COLOR};36m[cc -E] "$<" -> "$@" \e[0m"; \
                       export COLOR=$$[COLOR+1]; \
                       echo $${COLOR} > $(XWOS_COLOR_TMPFILE);)
    SHOW_CC = $(strip @COLOR=$$(cat $(XWOS_COLOR_TMPFILE)); \
                      if [ x$${COLOR} = x ]; then COLOR=0; \
                      elif [ $${COLOR} -gt 7 ]; then COLOR=0; fi; \
                      echo -e "\e[1m\e[4$${COLOR};36m[cc] "$<" -> "$@" \e[0m"; \
                      export COLOR=$$[COLOR+1]; \
                      echo $${COLOR} > $(XWOS_COLOR_TMPFILE);)
    SHOW_APP = $(strip @COLOR=$$(cat $(XWOS_COLOR_TMPFILE)); \
                       if [ x$${COLOR} = x ]; then COLOR=0; \
                       elif [ $${COLOR} -gt 7 ]; then COLOR=0; fi; \
                       echo -e "\e[1m\e[4$${COLOR};36m[as -E] "$<" -> "$@" \e[0m"; \
                       export COLOR=$$[COLOR+1]; \
                       echo $${COLOR} > $(XWOS_COLOR_TMPFILE);)
    SHOW_AS = $(strip @COLOR=$$(cat $(XWOS_COLOR_TMPFILE)); \
                      if [ x$${COLOR} = x ]; then COLOR=0; \
                      elif [ $${COLOR} -gt 7 ]; then COLOR=0; fi; \
                      echo -e "\e[1m\e[4$${COLOR};36m[as] "$<" -> "$@" \e[0m"; \
                      export COLOR=$$[COLOR+1]; \
                      echo $${COLOR} > $(XWOS_COLOR_TMPFILE);)

    SHOW_OD = $(strip @COLOR=$$(cat $(XWOS_COLOR_TMPFILE)); \
                      if [ x$${COLOR} = x ]; then COLOR=0; \
                      elif [ $${COLOR} -gt 7 ]; then COLOR=0; fi; \
                      echo -e "\e[1m\e[4$${COLOR};36m[od] "$<" -> "$@" \e[0m"; \
                      export COLOR=$$[COLOR+1]; \
                      echo $${COLOR} > $(XWOS_COLOR_TMPFILE);)

    SHOW_CP = $(strip @COLOR=$$(cat $(XWOS_COLOR_TMPFILE)); \
                      if [ x$${COLOR} = x ]; then COLOR=0; \
                      elif [ $${COLOR} -gt 7 ]; then COLOR=0; fi; \
                      echo -e "\e[1m\e[4$${COLOR};36m[cp] "$<" -> "$@" \e[0m"; \
                      export COLOR=$$[COLOR+1]; \
                      echo $${COLOR} > $(XWOS_COLOR_TMPFILE);)

    SHOW_MM = $(strip @COLOR=$$(cat $(XWOS_COLOR_TMPFILE)); \
                      if [ x$${COLOR} = x ]; then COLOR=0; \
                      elif [ $${COLOR} -gt 7 ]; then COLOR=0; fi; \
                      echo -e "\e[1m\e[4$${COLOR};36m[mm] "$<" -> "$@" \e[0m"; \
                      export COLOR=$$[COLOR+1]; \
                      echo $${COLOR} > $(XWOS_COLOR_TMPFILE);)

    SHOW_AR = $(strip @COLOR=$$(cat $(XWOS_COLOR_TMPFILE)); \
                      if [ x$${COLOR} = x ]; then COLOR=0; \
                      elif [ $${COLOR} -gt 7 ]; then COLOR=0; fi; \
                      echo -e "\e[1m\e[4$${COLOR};36m[ar] "$@" \e[0m"; \
                      export COLOR=$$[COLOR+1]; \
                      echo $${COLOR} > $(XWOS_COLOR_TMPFILE);)

    SHOW_LD = $(strip @COLOR=$$(cat $(XWOS_COLOR_TMPFILE)); \
                      if [ x$${COLOR} = x ]; then COLOR=0; \
                      elif [ $${COLOR} -gt 7 ]; then COLOR=0; fi; \
                      echo -e "\e[1m\e[4$${COLOR};36m[ld] "$@" \e[0m"; \
                      export COLOR=$$[COLOR+1]; \
                      echo $${COLOR} > $(XWOS_COLOR_TMPFILE);)

    SHOW_SIZE = $(strip @COLOR=$$(cat $(XWOS_COLOR_TMPFILE)); \
                        if [ x$${COLOR} = x ]; then COLOR=0; \
                        elif [ $${COLOR} -gt 7 ]; then COLOR=0; fi; \
                        echo -e "\e[1m\e[4$${COLOR};36m[size] "$@" \e[0m"; \
                        export COLOR=$$[COLOR+1]; \
                        echo $${COLOR} > $(XWOS_COLOR_TMPFILE);)
    SHOW_LUA2HEX = $(strip @COLOR=$$(cat $(XWOS_COLOR_TMPFILE)); \
                           if [ x$${COLOR} = x ]; then COLOR=0; \
                           elif [ $${COLOR} -gt 7 ]; then COLOR=0; fi; \
                           echo -e "\e[1m\e[4$${COLOR};36m[lua2hex] "$@" \e[0m"; \
                           export COLOR=$$[COLOR+1]; \
                           echo $${COLOR} > $(XWOS_COLOR_TMPFILE);)

    SHOW_RM = @
else
    SHOW_CPP =
    SHOW_CC =
    SHOW_APP =
    SHOW_AS =
    SHOW_OD =
    SHOW_CP =
    SHOW_MM =
    SHOW_AR =
    SHOW_LD =
    SHOW_SIZE =
    SHOW_LUA2HEX =
    SHOW_RM =
endif
